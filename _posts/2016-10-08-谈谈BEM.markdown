---
layout: post
title:  "谈谈BEM"
date:   2016-10-08 +0800
categories: css
---
> 命名和缓存失效是计算机科学里面最难应对的两件事。 ------ Phil Karlton

众所周知，良好的代码规范可以显著提升开发调试速度，降低维护成本。利用BEM方法则可确保项目开发人员采用同样的命名方式书写CSS，解决命名所带来的诸多烦恼。

BEM是一种方法论，通过块（Blocks）、元素（Elements）、修饰符（Modifiers）使你的CSS命名对其他开发者来说更加易读与理解。

### 块（Block）

块（Block）是一个封装好的且有独立语义或独立视觉的实体。块（Block）与块（Block）之间可以相互嵌套。

| 命名                                  | HTML | CSS         
| 块名可由英文字母、数字、破折号（-）组成。`.block` | `<div class="block">...</div>`   | `.block { color: #042; }`

### 元素（Elements）

元素（Elements）是组成块的基本单位，且没有独立的意义。

| 命名                                  | HTML | CSS         
| 元素名可由英文字母、数字、破折号（-）、下划线组成(_)。CSS类名由块名加双下划线加元素名组成。`.block__elem` | `<div class="block"><span class="block__elem"></span></div>` | `.block__elem { color: #042; }`

### 修饰符（Modifiers）

修饰符（Modifiers）是块（Block）与元素（Elements）的标记，用来标记状态、行为、表现。

| 命名                                  | HTML | CSS         
| 修饰符名可由英文字母、数字、破折号（-）、下划线组成(_)。CSS类名由块（Block）名或元素（Elements）名加双破折号加修饰符（Modifiers）组成。`.block--mod`，`.block__elem--mod`，`.block--color-black`，`.block--color-red` | `<div class="block block--mod">...</div><div class="block block--size-bigblock--shadow-yes">...</div>` | `.block--hidden { }` `.block--mod .block__elem { }` `.block__elem--mod { }`

以上可以归纳为：

{% highlight css %} 
.block{}
.block__element{}
.block--modifier{}

.block //表示块
.block__element //表示组成块的元素
.block--modifier  //表示块的不同状态或不同版本
{% endhighlight %}

### 命名事例

BEM的好处在于可以清晰描述被修饰者的用途且避免了样式名无休止的嵌套。例如：

{% highlight css %} 
.person{}  //一个人
.person__eyes{} //一个人的眼睛
.person__eyes--left{} //一个人的左眼
.person--female{} //女人
.person--female__eyes{} //女人的眼睛
{% endhighlight %}


### Sass与BEM

当你体验过Sass作用域嵌套所带给带来的快感之后，是否对Sass能否实现BEM方法有过担心？答案是并不需要。使用`@at-root`，会使你的Sass解析成你想要的样子。

{% highlight css %} 
//Sass
.block {
  @at-root #{&}__element {
  }
  @at-root #{&}--modifier {
  }
}
{% endhighlight %}

进而会得到：

{% highlight css %} 
//CSS
.block {
}
.block__element {
}
.block--modifier {
}
{% endhighlight %}